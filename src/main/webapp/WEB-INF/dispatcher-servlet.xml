<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	 <annotation-driven />
      <mvc:annotation-driven/>
      
      <tx:annotation-driven transaction-manager="transactionManager"/>
       <context:annotation-config/>
      
      <!-- for clearing the cookies on the browser after logout-->
      <mvc:interceptors>
        <beans:bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
                <beans:property name="cacheSeconds" value="0"/>
                <beans:property name="useExpiresHeader" value="false"/>
                <beans:property name="useCacheControlHeader" value="true"/>
                <beans:property name="useCacheControlNoStore" value="true"/>
            </beans:bean>     
     </mvc:interceptors>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources location="/resources/" mapping="/resources/**" />
  	<!-- Scans the base Package of application i.e controllers -->
  	<context:component-scan base-package="com.impetus.controller" />
  	
    <!-- View Resolver Used for application -->
    <beans:bean class="org.springframework.web.servlet.view.tiles2.TilesViewResolver" id="viewResolver">  
    </beans:bean>  
	<beans:bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">  
    	<beans:property name="definitions">  
     		<beans:list>  
         		<beans:value>/WEB-INF/configuration/tiles.xml</beans:value>  
     		</beans:list>  
      	</beans:property>  
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 
        <!-- one of the properties available; the maximum file size in bytes -->
        <beans:property name="maxUploadSize" value="10000000" />
    </beans:bean>  
 
 	<!-- Configure to plugin JSON as request and response in method handler // web service rest -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa //web service rest -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    	<beans:property name="supportedMediaTypes" value="application/json" />
    </beans:bean>
    
 	   
    
</beans:beans>